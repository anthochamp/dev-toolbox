name: Markdownlint

on:
  workflow_call:
    inputs:
      checkout-ref:
        description: The branch, tag or SHA to checkout. Defaults to the reference or SHA for that event.
        required: false
        type: string
      working-dir:
        description: "Directory within the repository where the package is located."
        required: false
        type: string
      node-package-manager:
        description: "Node.js package manager to use: npm, yarn, pnpm or none"
        required: true
        type: string
      node-version:
        description: "Version Spec of the Node.js version to use (takes precedence over node-version-file). Examples: 12.x, 10.15.1, >=10.15.0."
        required: false
        type: string
      node-version-file:
        description: "File containing the version Spec of the version to use. Examples: package.json, .nvmrc, .node-version, .tool-versions."
        required: false
        type: string
        default: ".nvmrc"

jobs:
  markdownlint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.checkout-ref }}
      - name: Install and enable corepack
        run: |
          npm install -g corepack
          corepack enable
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        if: ${{ inputs.node-package-manager != 'none' }}
        with:
          node-version: ${{ inputs.node-version }}
          node-version-file: ${{ inputs.node-version-file }}

      - name: Install Node.js dependencies (NPM)
        if: ${{ inputs.node-package-manager == 'npm' }}
        run: npm ci
        working-directory: ${{ inputs.working-dir }}

      - name: Install Node.js dependencies (Yarn)
        if: ${{ inputs.node-package-manager == 'yarn' }}
        run: yarn install
        working-directory: ${{ inputs.working-dir }}

      - name: Install Node.js dependencies (PNPM)
        if: ${{ inputs.node-package-manager == 'pnpm' }}
        run: pnpm i
        working-directory: ${{ inputs.working-dir }}

      - name: Lint Markdown files
        shell: bash # ensure
        run: shopt -s globstar && docker --context default run --rm -v $(pwd):/workdir davidanson/markdownlint-cli2:v0.17.2 '**/*.md'
        working-directory: ${{ inputs.working-dir }}
